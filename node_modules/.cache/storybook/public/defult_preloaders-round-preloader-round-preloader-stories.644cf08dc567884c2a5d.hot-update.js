"use strict";
self["webpackHotUpdatepreloader_lib"]("defult_preloaders-round-preloader-round-preloader-stories",{

/***/ "./stories/defult_preloaders/round-preloader/round-preloader.js":
/*!**********************************************************************!*\
  !*** ./stories/defult_preloaders/round-preloader/round-preloader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _round_preloader_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./round-preloader.css */ "./stories/defult_preloaders/round-preloader/round-preloader.css");
function _define_property(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _object_spread(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
                return Object.getOwnPropertyDescriptor(source, sym).enumerable;
            }));
        }
        ownKeys.forEach(function(key) {
            _define_property(target, key, source[key]);
        });
    }
    return target;
}


function RoundPreloader(param) {
    var _param_color = param.color, color = _param_color === void 0 ? "first" : _param_color, _param_speed = param.speed, speed = _param_speed === void 0 ? 5000 : _param_speed, style = param.style, children = param.children;
    var mergedStyles = _object_spread({
        color: color,
        WebkitAnimation: "cssload-spin ".concat(speed, "ms infinite linear"),
        animation: "cssload-spin ".concat(speed, "ms infinite linear")
    }, style);
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        style: mergedStyles,
        className: "loader loader1"
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", null));
}
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RoundPreloader);
RoundPreloader.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "RoundPreloader",
    "props": {
        "color": {
            "defaultValue": {
                "value": "'first'",
                "computed": false
            },
            "required": false
        },
        "speed": {
            "defaultValue": {
                "value": "5000",
                "computed": false
            },
            "required": false
        }
    }
};


/***/ })

});
//# sourceMappingURL=defult_preloaders-round-preloader-round-preloader-stories.644cf08dc567884c2a5d.hot-update.js.map